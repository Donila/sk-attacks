"use strict";;(function(){Vue.component("attack-cmp",{data:function data(){return{title:"Stronghold Kingdoms Attacks timing",attacks:[],attackForm:{attack:{armies:[],time:moment().format("HH:mm"),interval:0}},attackTime:moment().format("HH:mm"),speed:{text:"1x",value:1},newArmy:{name:"",timeToTarget:0,speedMultiplier:1},orderedArmies:[],time:{days:0,hours:0,minutes:0,seconds:0},speeds:[{text:"1x",value:1},{text:"2x",value:2},{text:"3x",value:3},{text:"4x",value:4},{text:"5x",value:5},{text:"6x fuckin dotator",value:6}],mask:"##"}},watch:{speed:function speed(b,c){var d=moment.duration(this.time).asSeconds(),e=Math.floor(d*c.value/b.value),f=Math.floor(e/3600),g=Math.floor((e-3600*f)/60);e=e-3600*f-60*g,this.time={days:0,hours:f,minutes:g,seconds:e}}},template:"\n    <v-container>\n        <v-form @submit.prevent=\"add(attackForm.attack)\">\n          <h2>Add your armies</h2>\n          <v-text-field\n            label=\"Army Name\"\n            v-model=\"newArmy.name\"\n            :rules=\"nameRules\"\n            required\n          ></v-text-field>\n          <v-layout>\n            <v-flex sm3>\n              <v-text-field\n                label=\"Hours\"\n                v-model=\"time.hours\"\n                :mask=\"mask\"\n                type=\"number\"\n              ></v-text-field>\n            </v-flex>\n            <v-flex sm3>\n              <v-text-field\n                label=\"Minutes\"\n                v-model=\"time.minutes\"\n                :rules=\"minutesRules\"\n                :mask=\"mask\"\n                type=\"number\"\n              ></v-text-field>\n            </v-flex>\n            <v-flex sm3>\n              <v-text-field\n                label=\"Seconds\"\n                v-model=\"time.seconds\"\n                :rules=\"secondsRules\"\n                :mask=\"mask\"\n                type=\"number\"\n              ></v-text-field>\n            </v-flex>\n            <v-flex sm2>\n              <v-select\n                v-bind:items=\"speeds\"\n                v-model=\"speed\"\n                label=\"Army speed\"\n                return-object\n                single-line\n                bottom\n              ></v-select>\n            </v-flex>\n            <v-flex sm1>\n              <v-btn fab dark color=\"indigo\" @click=\"addArmy()\" :disabled=\"!validateArmy()\">\n                <v-icon dark>add</v-icon>\n              </v-btn>\n            </v-flex>\n          </v-layout>\n        </v-form>\n\n        <v-layout>\n          <v-flex xs12 md4>\n            <v-layout row>\n              <v-flex md12>\n                <v-time-picker v-model=\"attackTime\" format=\"24hr\"></v-time-picker>\n              </v-flex>\n            </v-layout>\n            <v-flex md12>\n              <v-text-field\n                label=\"Interval between armies\"\n                v-model=\"attackForm.attack.interval\"\n                required\n              ></v-text-field>\n            </v-flex>\n          </v-flex>\n          <v-flex mx12 md8>\n            <v-layout row>\n              <v-flex xs12>\n                <v-card>\n                  <v-toolbar color=\"light-blue\" dark>\n                    <v-toolbar-side-icon></v-toolbar-side-icon>\n                    <v-toolbar-title>Armies</v-toolbar-title>\n                  </v-toolbar>\n                  <v-list two-line>\n                    <v-list-tile avatar v-for=\"army in sorted\" v-bind:key=\"army.name\" @click=\"\">\n                      <v-list-tile-avatar>\n                        <v-icon x-large dark>gavel</v-icon>\n                      </v-list-tile-avatar>\n                      <v-list-tile-content>\n                        <v-list-tile-title>{{ army.name }}</v-list-tile-title>\n                        <v-list-tile-sub-title>{{ timeToTarget(army) }}\n                          \n                        </v-list-tile-sub-title>\n                      </v-list-tile-content>\n                      <v-list-tile-action>\n                        <v-list-tile-action-text>{{ fromLeader(army) }}</v-list-tile-action-text>\n                        \n                      </v-list-tile-action>\n                      <v-list-tile-action>\n                        <v-icon @click=\"removeArmy(army)\">mdi-delete-circle</v-icon>\n                      </v-list-tile-action>\n                    </v-list-tile>\n                  </v-list>\n                </v-card>\n              </v-flex>\n            </v-layout>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    ",mounted:function mounted(){this.getAll()},computed:{nameRules:function nameRules(){return[function(b){return b&&0<b.length||"Please enter army name."}]},minutesRules:function minutesRules(){return[function(b){return-1<parseInt(b)||"Need minutes > 0."},function(b){return 60>parseInt(b)||"Need minutes < 60."}]},secondsRules:function secondsRules(){return[function(b){return-1<parseInt(b)||"Need seconds > 0."},function(b){return 60>parseInt(b)||"Need seconds < 60."}]},sorted:function sorted(){return _.reverse(_.sortBy(this.attackForm.attack.armies,function(b){return b.timeToTarget}))},attackStartTime:function attackStartTime(){// if(this.attackTime && this.attackTime.split(':').length > 1) {
//   let hours = this.attackTime.split(':')[0];
//   let minutes = this.attackTime.split(':')[1];
//   return moment().hours(hours).minutes(minutes).format("dddd, MMMM Do YYYY, H:mm:ss");
// }
return this.attackTime}},methods:{getAll:function getAll(){var _this=this;this.$http.get("/api/attacks").then(function(b){return b.json()}).then(function(b){_this.attacks=b})},add:function add(b){var _this2=this;this.$http.post("/api/attacks",b).then(function(c){return c.json()}).then(function(c){_this2.attacks.push(c),_this2.newArmy={name:"",timeToTarget:0,speedMultiplier:1},_this2.attackForm={attack:{armies:[]}}})},remove:function remove(b){var _this3=this;this.$http.delete("/api/attacks/"+b).then(function(){_this3.todos.forEach(function(c,d){c._id===b&&_this3.todos.splice(d,1)})})},addArmy:function addArmy(){this.newArmy.timeToTarget=this.convertTime(this.time),this.newArmy.speedMultiplier=this.speed.value,this.attackForm.attack.armies.push(Vue.util.extend({},this.newArmy)),this.newArmy={name:"",timeToTarget:0,speedMultiplier:1},this.speed={text:"1x",value:1},this.time={days:0,hours:0,minutes:0,seconds:0}},validateArmy:function validateArmy(){return!!this.newArmy.name&&!(1>moment.duration(this.time).asSeconds())},convertTime:function convertTime(b){var c=moment.duration(b);return c.asSeconds()},getSlowestArmy:function getSlowestArmy(){return 0<this.attackForm.attack.armies.length?_.last(_.sortBy(this.attackForm.attack.armies,function(b){return b.timeToTarget})):{name:""}},fromLeader:function fromLeader(b){if(0<this.attackForm.attack.armies.length){for(var d=_.sortBy(this.attackForm.attack.armies,function(p){return p.timeToTarget}),e=_.last(d).name,f=1,c=1;c<d.length+1;c++)d[c-1].name==b.name&&(f=c);var g=0,j=0;this.attackTime&&1<this.attackTime.split(":").length&&(g=this.attackTime.split(":")[0],j=this.attackTime.split(":")[1]);var k=moment().hours(g).minutes(j).seconds(0),l=moment.duration(b.timeToTarget,"seconds");e!=b.name&&k.add(this.attackForm.attack.interval*f,"seconds");var n=k.subtract(l);return n.format("H:mm:ss")}return"no armies"},timeToTarget:function timeToTarget(b){var c=moment.duration(b.timeToTarget,"seconds");return this.formatTime(c.hours())+":"+this.formatTime(c.minutes())+":"+this.formatTime(c.seconds())},formatTime:function formatTime(b){return 2>(b+"").length?"0"+b:b},removeArmy:function removeArmy(b){this.attackForm.attack.armies=_.filter(this.attackForm.attack.armies,function(c){return c.name!=b.name})}}})})();